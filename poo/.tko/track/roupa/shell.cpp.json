{
    "patches": [
        {
            "label": "2024-12-20_20-13-30",
            "content": "@@ -33,16 +33,17 @@\n ce std;%0A\n+%0A\n class T%7B\n@@ -167,16 +167,21 @@\n tSize() \n+const\n %7B%0A      \n@@ -212,28 +212,24 @@\n %0A        %7D%0A%0A\n-    \n     void set\n@@ -250,20 +250,16 @@\n wSize)%7B%0A\n-    \n         \n@@ -525,21 +525,17 @@\n _ptr%3CT%3E \n-towel\n+T\n ;%0Apublic\n@@ -566,21 +566,17 @@\n   this-%3E\n-towel\n+T\n  = make_\n@@ -608,16 +608,21 @@\n id size(\n+const\n  string&\n@@ -644,21 +644,17 @@\n   this-%3E\n-towel\n+T\n -%3EsetSiz\n@@ -709,16 +709,17 @@\n  %22size: \n+(\n %22 %3C%3C thi\n@@ -725,13 +725,9 @@\n is-%3E\n-towel\n+T\n -%3Ege\n@@ -738,16 +738,17 @@\n e() %3C%3C %22\n+)\n %5Cn%22;%0A   \n"
        },
        {
            "label": "2024-12-20_20-17-04",
            "content": "@@ -40,20 +40,16 @@\n %0Aclass T\n-owel\n %7B%0A    pr\n@@ -97,20 +97,16 @@\n        T\n-owel\n ()%7B%0A    \n@@ -166,21 +166,16 @@\n tSize() \n-const\n %7B%0A      \n@@ -349,20 +349,16 @@\n         \n-    \n newSize \n@@ -367,24 +367,16 @@\n  %22XG%22)%7B%0A\n-        \n         \n@@ -428,28 +428,24 @@\n             \n-   \n- \n cout %3C%3C %22fai\n@@ -465,39 +465,8 @@\n lido\n-, tente PP, P, M, G, GG ou XG%5Cn\n %22;%0A \n@@ -525,20 +525,16 @@\n ed_ptr%3CT\n-owel\n %3E towel;\n@@ -593,20 +593,16 @@\n shared%3CT\n-owel\n %3E();%0A   \n@@ -622,13 +622,8 @@\n ize(\n-const\n  str\n@@ -718,17 +718,16 @@\n  %22size: \n-(\n %22 %3C%3C thi\n@@ -750,17 +750,16 @@\n e() %3C%3C %22\n-)\n %5Cn%22;%0A   \n"
        },
        {
            "label": "2024-12-20_20-17-24",
            "content": "@@ -14,103 +14,8 @@\n hpp%22\n-%0A#include %3Cmemory%3E  // Para usar shared_ptr e make_shared%0A#include %3Ciostream%3E // Para usar cout\n %0A%0Aus\n@@ -33,17 +33,16 @@\n ce std;%0A\n-%0A\n class To\n@@ -44,19 +44,22 @@\n ss Towel\n- \n %7B%0A\n+    \n private:\n@@ -59,24 +59,28 @@\n rivate:%0A    \n+  \n+  \n string size;\n@@ -83,74 +83,21 @@\n ize;\n+%0A\n   \n-// Atributo privado para armazenar o tamanho da toalha%0A%0A\n+  \n public:%0A\n     \n@@ -88,24 +88,28 @@\n     public:%0A\n+    \n     Towel() \n@@ -107,19 +107,22 @@\n  Towel()\n- \n %7B%0A\n+    \n         \n@@ -141,63 +141,24 @@\n  %22%22;\n+%0A\n   \n-// Inicializa o tamanho como uma string vazia\n+      %7D%0A\n %0A    \n-%7D%0A%0A\n     \n@@ -179,17 +179,16 @@\n () const\n- \n %7B%0A      \n@@ -185,24 +185,28 @@\n st%7B%0A        \n+  \n+  \n return this-\n@@ -215,48 +215,24 @@\n ize;\n-  // Retorna o tamanho da toalha\n+%0A        %7D%0A\n %0A    \n-%7D%0A%0A\n     \n@@ -263,52 +263,14 @@\n ize)\n- \n %7B%0A    \n-    // Valida os tamanhos permitidos%0A\n     \n@@ -275,17 +275,16 @@\n       if\n- \n (newSize\n@@ -362,16 +362,20 @@\n         \n+    \n newSize \n@@ -382,17 +382,16 @@\n == %22XG%22)\n- \n %7B%0A      \n@@ -388,32 +388,40 @@\n %22)%7B%0A            \n+ \n+       \n this-%3Esize = new\n@@ -429,32 +429,13 @@\n ize;\n+%0A\n   \n-// Atualiza o tamanho%0A\n+  \n     \n@@ -435,32 +435,34 @@\n            %7D\n- \n else\n- \n %7B%0A\n+    \n             \n@@ -527,43 +527,23 @@\n %5Cn%22;\n+%0A\n   \n-// Erro se o tamanho for inv%C3%A1lido\n+          %7D%0A\n %0A   \n@@ -549,22 +549,16 @@\n       %7D%0A\n-    %7D%0A\n %7D;%0A%0Aclas\n@@ -569,25 +569,16 @@\n apter %7B%0A\n-private:%0A\n     shar\n@@ -601,42 +601,8 @@\n wel;\n-  // Shared pointer para a toalha%0A\n %0Apub\n@@ -669,53 +669,15 @@\n %3E();\n-  // Cria a toalha usando make_shared\n %0A    %7D%0A\n-%0A\n     \n@@ -747,69 +747,15 @@\n ze);\n-  // Chama o m%C3%A9todo setSize para configurar o tamanho\n %0A    %7D%0A\n-%0A\n     \n@@ -772,45 +772,8 @@\n ) %7B%0A\n-        // Exibe o tamanho da toalha%0A\n     \n@@ -877,36 +877,8 @@\n ter;\n-  // Cria um objeto Adapter%0A\n %0A   \n@@ -924,27 +924,8 @@\n %22%22);\n-  // Exibe o prompt\n %0A   \n@@ -957,36 +957,8 @@\n t();\n-  // L%C3%AA a entrada do usu%C3%A1rio\n %0A   \n@@ -999,141 +999,51 @@\n  ');\n-  // Divide a entrada em palavras%0A%0A        fn::write(line);  // Exibe a linha de entrada%0A%0A        // Processa os comandos%0A \n+%0A        fn::write(line);%0A%0A        if\n       \n- if \n (arg\n@@ -1057,19 +1057,25 @@\n  %22end%22) \n-%7B%0A \n+ %7B break;\n         \n@@ -1081,68 +1081,31 @@\n     \n-break;  // Encerra o programa se o comando for %22end%22\n+              %7D\n %0A       \n  %7D e\n@@ -1092,34 +1092,32 @@\n        %7D%0A       \n- %7D\n  else if (args%5B0\n@@ -1126,36 +1126,24 @@\n == %22size%22) %7B\n-%0A           \n  adapter.siz\n@@ -1159,45 +1159,24 @@\n );  \n-// Altera o tamanho da toalha\n+       %7D\n %0A       \n  %7D e\n@@ -1167,26 +1167,24 @@\n    %7D%0A       \n- %7D\n  else if (ar\n@@ -1201,28 +1201,16 @@\n show%22) %7B\n-%0A           \n  adapter\n@@ -1223,60 +1223,48 @@\n );  \n-// Exibe o tamanho atual da toalha%0A        %7D else %7B%0A\n+              %7D%0A        else            \n     \n@@ -1266,24 +1266,26 @@\n             \n+ %7B\n  fn::write(%22\n@@ -1308,58 +1308,13 @@\n %22); \n- // Comando inv%C3%A1lido%0A        %7D%0A    %7D%0A%0A    return 0;%0A%7D%0A\n+%7D%0A    %7D%0A%7D\n"
        },
        {
            "label": "2024-12-20_20-21-21",
            "content": "@@ -88,16 +88,33 @@\n stream%3E \n+// Para usar cout\n %0A%0Ausing \n@@ -170,16 +170,71 @@\n  size;  \n+// Atributo privado para armazenar o tamanho da toalha%0A\n %0Apublic:\n@@ -274,16 +274,61 @@\n  = %22%22;  \n+// Inicializa o tamanho como uma string vazia\n %0A    %7D%0A%0A\n@@ -347,16 +347,22 @@\n etSize()\n+ const\n  %7B%0A     \n@@ -383,25 +383,47 @@\n -%3Esize; \n-%0A        \n+ // Retorna o tamanho da toalha\n %0A    %7D%0A%0A\n@@ -649,29 +649,38 @@\n ewSize; \n-%0A            \n+ // Atualiza o tamanho\n %0A       \n@@ -764,29 +764,50 @@\n  XG%5Cn%22; \n-%0A            \n+ // Erro se o tamanho for inv%C3%A1lido\n %0A       \n@@ -874,21 +874,47 @@\n towel;  \n-%0A    \n+// Shared pointer para a toalha\n %0A%0Apublic\n@@ -972,33 +972,59 @@\n %3CTowel%3E();  \n-%0A        \n+// Cria a toalha usando make_shared\n %0A    %7D%0A%0A    \n@@ -1032,16 +1032,22 @@\n oid size\n+(const\n  string&\n@@ -1092,25 +1092,67 @@\n size);  \n-%0A        \n+// Chama o m%C3%A9todo setSize para configurar o tamanho\n %0A    %7D%0A%0A\n@@ -1177,25 +1177,44 @@\n         \n-%0A        \n+// Exibe o tamanho da toalha\n %0A       \n"
        },
        {
            "label": "2024-12-20_20-22-20",
            "content": "@@ -805,18 +805,16 @@\n oid size\n- (\n  string&\n"
        },
        {
            "label": "2024-12-20_20-22-48",
            "content": "@@ -315,24 +315,57 @@\n e) %7B%0A       \n+ // Valida os tamanhos permitidos\n %0A        if \n"
        },
        {
            "label": "2024-12-20_20-23-00",
            "content": "@@ -988,16 +988,41 @@\n apter;  \n+// Cria um objeto Adapter\n %0A%0A    wh\n@@ -1059,24 +1059,41 @@\n (%22$%22, %22%22);  \n+// Exibe o prompt\n %0A        aut\n@@ -1111,24 +1111,50 @@\n ::input();  \n+// L%C3%AA a entrada do usu%C3%A1rio\n %0A        aut\n@@ -1181,24 +1181,55 @@\n ine, ' ');  \n+// Divide a entrada em palavras\n %0A%0A        fn\n@@ -1244,16 +1244,43 @@\n line);  \n+// Exibe a linha de entrada\n %0A%0A      \n@@ -1357,16 +1357,60 @@\n break;  \n+// Encerra o programa se o comando for %22end%22\n %0A       \n@@ -1474,24 +1474,53 @@\n (args%5B1%5D);  \n+// Altera o tamanho da toalha\n %0A        %7D e\n@@ -1573,24 +1573,58 @@\n er.show();  \n+// Exibe o tamanho atual da toalha\n %0A        %7D e\n@@ -1669,24 +1669,43 @@\n nv%C3%A1lido%22);  \n+// Comando inv%C3%A1lido\n %0A        %7D%0A \n"
        },
        {
            "label": "2024-12-20_20-24-21",
            "content": "#include \"fn.hpp\"\n#include <memory>  // Para usar shared_ptr e make_shared\n#include <iostream> \n\nusing namespace std;\n\nclass Towel {\nprivate:\n    string size;  \npublic:\n    Towel() {\n        this->size = \"\";  \n    }\n\n    string getSize() {\n        return this->size; \n        \n    }\n\n    void setSize(string newSize) {\n       \n        if (newSize == \"PP\" || newSize == \"P\" || newSize == \"M\" || newSize == \"GG\" ||\n            newSize == \"XG\") {\n            this->size = newSize; \n            \n        } else {\n            cout << \"fail: Valor inv\u00e1lido, tente PP, P, M, G, GG ou XG\\n\"; \n            \n        }\n    }\n};\n\nclass Adapter {\nprivate:\n    shared_ptr<Towel> towel;  \n    \n\npublic:\n    Adapter() {\n        this->towel = make_shared<Towel>();  \n        \n    }\n\n    void size ( string& size) {\n        this->towel->setSize(size);  \n        \n    }\n\n    void show() {\n        \n        \n        cout << \"size: (\" << this->towel->getSize() << \")\\n\";\n    }\n};\n\nint main() {\n    Adapter adapter;  \n\n    while (true) {\n        fn::write(\"$\", \"\");  \n        auto line = fn::input();  \n        auto args = fn::split(line, ' ');  \n\n        fn::write(line);  \n\n        // Processa os comandos\n        if (args[0] == \"end\") {\n            break;  \n        } else if (args[0] == \"size\") {\n            adapter.size(args[1]);  \n        } else if (args[0] == \"show\") {\n            adapter.show();  \n        } else {\n            fn::write(\"Comando inv\u00e1lido\");  \n        }\n    }\n\n    return 0;\n}\n"
        }
    ]
}