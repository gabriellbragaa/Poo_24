{
    "patches": [
        {
            "label": "2024-11-30_02-13-47",
            "content": "@@ -217,30 +217,8 @@\n p%22%0A%0A\n-using namespace std;%0A%0A\n clas\n@@ -247,26 +247,27 @@\n nt energyMax\n-=0\n+%7B0%7D\n ;%0A    int hu\n@@ -273,18 +273,19 @@\n ungryMax\n-=0\n+%7B0%7D\n ;%0A    in\n@@ -294,18 +294,19 @@\n cleanMax\n-=0\n+%7B0%7D\n ;%0A    in\n@@ -313,18 +313,19 @@\n t energy\n-=0\n+%7B0%7D\n ;%0A    in\n@@ -332,18 +332,19 @@\n t hungry\n-=0\n+%7B0%7D\n ;%0A    in\n@@ -350,18 +350,19 @@\n nt clean\n-=0\n+%7B0%7D\n ;%0A    in\n@@ -371,18 +371,19 @@\n diamonds\n-=0\n+%7B0%7D\n ;%0A    in\n@@ -391,10 +391,11 @@\n  age\n-=0\n+%7B0%7D\n ;%0A  \n@@ -604,24 +604,30 @@\n ol isAlive()\n+ const\n  %7B%0A        r\n@@ -727,16 +727,22 @@\n Energy()\n+ const\n  %7B%0A     \n@@ -785,29 +785,25 @@\n tEnergy(int \n-value\n+x\n ) %7B%0A        \n@@ -811,23 +811,33 @@\n nergy = \n+std::\n max(0, \n+std::\n min(ener\n@@ -839,29 +839,25 @@\n (energyMax, \n-value\n+x\n ));%0A    %7D%0A%0A \n@@ -874,16 +874,22 @@\n Hungry()\n+ const\n  %7B%0A     \n@@ -916,178 +916,229 @@\n   %7D%0A\n+%0A\n     \n-int getAge() %7B%0A        return age;%0A    %7D%0A%0A    void setAge(int x) %7B%0A        age = x;%0A    %7D%0A%0A    void setHungry(int value) %7B%0A        hungry = max(0,min(hungryMax, value\n+void setHungry(int x) %7B%0A        hungry = std::max(0, std::min(hungryMax, x));%0A    %7D%0A%0A    int getClean() const %7B%0A        return clean;%0A    %7D%0A%0A    void setClean(int x) %7B%0A        clean = std::max(0, std::min(cleanMax, x\n ));%0A\n@@ -1155,23 +1155,33 @@\n  int get\n-Clean()\n+EnergyMax() const\n  %7B%0A     \n@@ -1182,37 +1182,41 @@\n %0A        return \n-clean\n+energyMax\n ;%0A    %7D%0A%0A    voi\n@@ -1216,87 +1216,129 @@\n     \n-void setClean(int value) %7B\n+int getHungryMax() const %7B%0A        return hungryMax;\n %0A    \n+%7D%0A%0A\n     \n-clean = max(0, min(cleanMax, value))\n+int getCleanMax() const %7B%0A        return cleanMax\n ;%0A    %7D%0A\n     \n@@ -1329,25 +1329,25 @@\n nMax;%0A    %7D%0A\n- \n+%0A\n     int getD\n@@ -1355,16 +1355,22 @@\n amonds()\n+ const\n  %7B%0A     \n@@ -1421,21 +1421,17 @@\n nds(int \n-value\n+x\n ) %7B%0A    \n@@ -1449,21 +1449,17 @@\n s = \n-value\n+x\n ;%0A    %7D%0A\n     \n@@ -1450,24 +1450,25 @@\n  = x;%0A    %7D%0A\n+%0A\n     int getE\n@@ -1466,27 +1466,27 @@\n  int get\n-EnergyMax()\n+Age() const\n  %7B%0A     \n@@ -1491,33 +1491,27 @@\n      return \n-energyMax\n+age\n ;%0A    %7D%0A%0A   \n@@ -1515,108 +1515,43 @@\n     \n-int getHungryMax() %7B%0A        return hungryMax;%0A    %7D%0A%0A    int getCleanMax() %7B%0A        return cleanMa\n+void setAge(int x) %7B%0A        age = \n x;%0A \n@@ -1560,16 +1560,21 @@\n  %7D%0A%0A    \n+std::\n string s\n@@ -1569,32 +1569,38 @@\n td::string str()\n+ const\n  %7B%0A        ostri\n@@ -1594,16 +1594,21 @@\n         \n+std::\n ostrings\n@@ -1892,28 +1892,44 @@\n rivate:%0A    \n+std::shared_ptr%3C\n Pet\n-*\n+%3E\n  pet%7Bnullptr\n@@ -1990,32 +1990,37 @@\n ) %7B%0A            \n+std::\n cout %3C%3C %22fail: p\n@@ -2065,32 +2065,33 @@\n alse;%0A        %7D%0A\n+%0A\n         if (pet-\n@@ -2094,21 +2094,22 @@\n pet-%3Eget\n-Clean\n+Energy\n () %3C= 0)\n@@ -2149,32 +2149,37 @@\n e);%0A            \n+std::\n cout %3C%3C %22fail: p\n@@ -2195,14 +2195,15 @@\n  de \n-sujeir\n+fraquez\n a%5Cn%22\n@@ -2232,32 +2232,33 @@\n alse;%0A        %7D%0A\n+%0A\n         if (pet-\n@@ -2316,32 +2316,37 @@\n e);%0A            \n+std::\n cout %3C%3C %22fail: p\n@@ -2416,38 +2416,37 @@\n     if (pet-%3Eget\n-Energy\n+Clean\n () %3C= 0) %7B%0A     \n@@ -2478,32 +2478,37 @@\n e);%0A            \n+std::\n cout %3C%3C %22fail: p\n@@ -2512,39 +2512,38 @@\n : pet morreu de \n-fraquez\n+sujeir\n a%5Cn%22;%0A          \n@@ -2560,32 +2560,33 @@\n alse;%0A        %7D%0A\n+%0A\n         return t\n@@ -2614,20 +2614,36 @@\n    Game(\n+std::shared_ptr%3C\n Pet\n-*\n+%3E\n  pet) : \n@@ -2705,25 +2705,24 @@\n clean) %7B\n- \n %0A       \n  Pet* pe\n@@ -2717,27 +2717,36 @@\n     \n- Pet*\n  pet = \n-new \n+std::make_shared%3C\n Pet\n+%3E\n (ene\n@@ -2794,16 +2794,22 @@\n ng str()\n+ const\n  %7B%0A     \n@@ -2893,115 +2893,8 @@\n rn;%0A\n-        %0A        %0A        pet-%3EsetAge(pet-%3EgetAge() + 1);%0A        pet-%3EsetDiamonds(pet-%3EgetDiamonds() + 1);\n %0A   \n@@ -3026,32 +3026,114 @@\n ) - 3);%0A        \n+pet-%3EsetDiamonds(pet-%3EgetDiamonds() + 1);%0A        pet-%3EsetAge(pet-%3EgetAge() + 1);%0A\n %0A        testAli\n@@ -3247,48 +3247,8 @@\n 1);%0A\n-        pet-%3EsetAge(pet-%3EgetAge() + 1);%0A\n     \n@@ -3332,16 +3332,56 @@\n () - 2);\n+%0A        pet-%3EsetAge(pet-%3EgetAge() + 1);\n %0A%0A      \n@@ -3559,32 +3559,37 @@\n ) %7B%0A            \n+std::\n cout %3C%3C %22fail: n\n@@ -3869,56 +3869,8 @@\n rn;%0A\n-        %0A        pet-%3EsetAge(pet-%3EgetAge() + 2);\n %0A   \n@@ -3916,51 +3916,8 @@\n 3);%0A\n-        pet-%3EsetClean(pet-%3EgetCleanMax());%0A\n     \n@@ -3966,25 +3966,91 @@\n         \n-%0A        \n+pet-%3EsetClean(pet-%3EgetCleanMax());%0A        pet-%3EsetAge(pet-%3EgetAge() + 2);%0A\n %0A       \n@@ -4079,23 +4079,23 @@\n %0A%0Aclass \n-Adapter\n+Student\n  %7B%0Apriva\n@@ -4126,23 +4126,23 @@\n ic:%0A    \n-Adapter\n+Student\n (int ene\n@@ -4189,16 +4189,21 @@\n me(Game(\n+std::\n make_sha\n@@ -4266,16 +4266,21 @@\n         \n+std::\n cout %3C%3C \n@@ -4534,875 +4534,4 @@\n %7D%0A%7D;\n-%0A%0Aint main() %7B%0A    Adapter stu(0, 0, 0);%0A    while (true) %7B%0A        auto line = fn::input();%0A        auto args = fn::split(line, ' ');%0A%0A        fn::write(%22$%22 + line);%0A%0A        if      (args%5B0%5D == %22end%22)    %7B break;                                       %7D%0A        else if (args%5B0%5D == %22init%22)   %7B stu = Adapter(+args%5B1%5D, +args%5B2%5D, +args%5B3%5D); %7D%0A        else if (args%5B0%5D == %22show%22)   %7B stu.show();                                  %7D%0A        else if (args%5B0%5D == %22play%22)   %7B stu.play();                                  %7D%0A        else if (args%5B0%5D == %22eat%22)    %7B stu.eat();                                   %7D%0A        else if (args%5B0%5D == %22sleep%22)  %7B stu.sleep();                                 %7D%0A        else if (args%5B0%5D == %22shower%22) %7B stu.shower();                                %7D%0A        else                          %7B fn::write(%22fail: comando invalido%22);         %7D%0A    %7D%0A%7D\n"
        },
        {
            "label": "2024-11-30_02-22-49",
            "content": "@@ -4029,24 +4029,13 @@\n Game\n-*\n  game\n- = nullptr\n ;%0A%0Ap\n@@ -4107,24 +4107,29 @@\n ame(\n-new \n Game(\n-new \n+make_shared%3C\n Pet\n+%3E\n (ene\n@@ -4188,22 +4188,27 @@\n cout %3C%3C \n+this-%3E\n game\n--%3E\n+.\n str() %3C%3C\n@@ -4208,16 +4208,21 @@\n tr() %3C%3C \n+std::\n endl;%0A  \n@@ -4252,22 +4252,27 @@\n         \n+this-%3E\n game\n--%3E\n+.\n play();%0A\n@@ -4306,22 +4306,27 @@\n         \n+this-%3E\n game\n--%3E\n+.\n shower()\n@@ -4359,22 +4359,27 @@\n         \n+this-%3E\n game\n--%3E\n+.\n eat();%0A \n@@ -4415,14 +4415,19 @@\n     \n+this-%3E\n game\n--%3E\n+.\n slee\n"
        },
        {
            "label": "2024-11-30_02-26-17",
            "content": "@@ -1851,16 +1851,17 @@\n  pet\n-=\n+%7B\n nullptr\n+%7D\n ;%0A%0A \n"
        },
        {
            "label": "2024-11-30_02-29-33",
            "content": "@@ -1847,16 +1847,24 @@\n Pet* pet\n+=nullptr\n ;%0A%0A    b\n"
        },
        {
            "label": "2024-11-30_02-29-41",
            "content": "@@ -1847,26 +1847,16 @@\n Pet* pet\n- = nullptr\n ;%0A%0A    b\n@@ -2598,117 +2598,12 @@\n     \n-if (pet != nullptr) %7B%0A            delete pet; // Libera mem%C3%B3ria do Pet anterior, se existir%0A        %7D%0A       \n+Pet*\n  pet\n@@ -2640,38 +2640,8 @@\n an);\n- // Atribui ao atributo membro\n %0A   \n"
        },
        {
            "label": "2024-11-30_02-31-02",
            "content": "@@ -467,16 +467,27 @@\n t hungry\n+, int clean\n )%0A      \n@@ -2580,16 +2580,27 @@\n t hungry\n+, int clean\n ) %7B %0A   \n@@ -2742,16 +2742,23 @@\n , hungry\n+, clean\n ); // At\n"
        },
        {
            "label": "2024-11-30_02-33-37",
            "content": "@@ -4185,32 +4185,43 @@\n ergy, int hungry\n+, int clean\n )%0A        : game\n@@ -4252,16 +4252,23 @@\n , hungry\n+, clean\n ))) %7B%7D%0A%0A\n"
        },
        {
            "label": "2024-11-30_02-34-07",
            "content": "@@ -463,35 +463,24 @@\n , int hungry\n-, int clean\n )%0A        : \n@@ -2573,74 +2573,191 @@\n ngry\n-, int clean) %7B %0A        Pet* pet = new Pet(energy, hungry, clean);\n+) %7B %0A        if (pet != nullptr) %7B%0A            delete pet; // Libera mem%C3%B3ria do Pet anterior, se existir%0A        %7D%0A        pet = new Pet(energy, hungry); // Atribui ao atributo membro\n %0A   \n@@ -4197,19 +4197,8 @@\n ngry\n-, int clean\n )%0A  \n@@ -4241,23 +4241,16 @@\n , hungry\n-, clean\n ))) %7B%7D%0A%0A\n"
        },
        {
            "label": "2024-11-30_02-34-33",
            "content": "@@ -2600,72 +2600,8 @@\n  %7B %0A\n-        if (pet != nullptr) %7B%0A            delete pet;%0A        %7D%0A\n     \n"
        },
        {
            "label": "2024-11-30_02-36-29",
            "content": "@@ -2716,21 +2716,16 @@\n );%0A    %7D\n-%0A    \n %0A%0A    st\n"
        },
        {
            "label": "2024-11-30_02-37-09",
            "content": "@@ -2663,24 +2663,29 @@\n    %7D%0A       \n+ Pet*\n  pet = new P\n@@ -2717,16 +2717,20 @@\n ;%0A    %7D%0A\n+    \n %0A%0A    st\n"
        },
        {
            "label": "2024-11-30_02-38-08",
            "content": "@@ -269,24 +269,26 @@\n nt energyMax\n+=0\n ;%0A    int hu\n@@ -290,24 +290,26 @@\n nt hungryMax\n+=0\n ;%0A    int cl\n@@ -310,24 +310,26 @@\n int cleanMax\n+=0\n ;%0A    int en\n@@ -328,24 +328,26 @@\n   int energy\n+=0\n ;%0A    int hu\n@@ -346,24 +346,26 @@\n   int hungry\n+=0\n ;%0A    int cl\n@@ -363,24 +363,26 @@\n    int clean\n+=0\n ;%0A    int di\n@@ -424,13 +424,14 @@\n live\n-=\n+%7B\n true\n+%7D\n ;%0A%0Ap\n@@ -852,49 +852,8 @@\n ));%0A\n-         if (energy == 0) alive = false;%0A\n     \n@@ -1084,48 +1084,8 @@\n ));%0A\n-        if (hungry == 0) alive = false;%0A\n     \n@@ -1218,47 +1218,8 @@\n ));%0A\n-        if (clean == 0) alive = false;%0A\n     \n@@ -1522,33 +1522,27 @@\n %0A    string \n-to_string\n+str\n () %7B%0A       \n@@ -2008,40 +2008,504 @@\n     \n-return true;%0A        %7D%0A    %0A    \n+if (pet-%3EgetClean() %3C= 0) %7B%0A            pet-%3EsetAlive(false);%0A            cout %3C%3C %22fail: pet morreu de sujeira%5Cn%22;%0A            return false;%0A        %7D%0A        if (pet-%3EgetHungry() %3C= 0) %7B%0A            pet-%3EsetAlive(false);%0A            cout %3C%3C %22fail: pet morreu de fome%5Cn%22;%0A            return false;%0A        %7D%0A%0A        if (pet-%3EgetEnergy() %3C= 0) %7B%0A            pet-%3EsetAlive(false);%0A            cout %3C%3C %22fail: pet morreu de fraqueza%5Cn%22;%0A            return false;%0A        %7D%0A        return true;%0A    %7D\n %0A%0Apu\n@@ -2724,22 +2724,21 @@\n   st\n-ring to_string\n+d::string str\n () %7B\n@@ -2758,25 +2758,19 @@\n rn pet-%3E\n-to_string\n+str\n ();%0A    \n@@ -4265,17 +4265,11 @@\n me-%3E\n-to_string\n+str\n () %3C\n"
        },
        {
            "label": "2024-11-30_02-46-05",
            "content": "@@ -1,99 +1,222 @@\n-#include %22fn.hpp%22%0A#include %3Ciostream%3E%0A#include %3Cstring%3E%0A#include %3Csstream%3E%0A#include %3Calgorithm%3E\n+/*Relat%C3%B3rio:%0APassou em todos os testes%0ARealizei sozinha a atividade, uso de chatgpt para testAlive;%0AAprendi: encapsulamento, setter para modificar os atributos privados.%0ATempo de Atividade: 4 horas%0A*/%0A#include %22fn.hpp%22\n %0A%0Aus\n@@ -273,17 +273,25 @@\n nergyMax\n-,\n+;%0A    int\n  hungryM\n@@ -292,17 +292,25 @@\n ungryMax\n-,\n+;%0A    int\n  cleanMa\n@@ -322,33 +322,49 @@\n   int energy\n-, hungry,\n+;%0A    int hungry;%0A    int\n  clean;%0A    \n@@ -379,20 +379,24 @@\n onds\n- = 0,\n+=0;%0A    int\n  age\n- = \n+=\n 0;%0A \n@@ -412,130 +412,16 @@\n live\n- = \n+=\n true;%0A%0A\n-    void checkAlive() %7B%0A        if (energy == 0 %7C%7C hungry == 0 %7C%7C clean == 0)%0A            alive = false;%0A    %7D%0A%0A\n publ\n@@ -605,30 +605,24 @@\n ol isAlive()\n- const\n  %7B%0A        r\n@@ -657,96 +657,375 @@\n  set\n-Energy(int value) %7B%0A        energy = max(0, min(energyMax, value));%0A        checkAlive()\n+Alive(bool state) %7B%0A        alive = state;%0A    %7D%0A%0A    int getEnergy() %7B%0A        return energy;%0A    %7D%0A%0A    void setEnergy(int value) %7B%0A        energy = max(0, min(energyMax, value));%0A         if (energy == 0) alive = false;%0A    %7D%0A%0A    int getHungry() %7B%0A        return hungry;%0A    %7D%0A    int getAge() %7B%0A        return age;%0A    %7D%0A%0A    void setAge(int x) %7B%0A        age = x\n ;%0A  \n@@ -1080,25 +1080,24 @@\n gry = max(0,\n- \n min(hungryMa\n@@ -1112,36 +1112,104 @@\n ));%0A        \n-checkAlive()\n+if (hungry == 0) alive = false;%0A    %7D%0A%0A    int getClean() %7B%0A        return clean\n ;%0A    %7D%0A%0A   \n@@ -1294,28 +1294,45 @@\n     \n-checkAlive()\n+if (clean == 0) alive = false\n ;%0A    %7D%0A\n %0A   \n@@ -1327,29 +1327,28 @@\n ;%0A    %7D%0A\n-%0A\n     \n-void add\n+ int get\n Diamonds\n@@ -1360,24 +1360,31 @@\n         \n+return \n diamonds\n ++;%0A    \n@@ -1379,10 +1379,8 @@\n onds\n-++\n ;%0A  \n@@ -1393,22 +1393,27 @@\n    void \n-addAge\n+setDiamonds\n (int val\n@@ -1430,13 +1430,17 @@\n     \n-age +\n+diamonds \n = va\n@@ -1442,33 +1442,32 @@\n  = value;%0A    %7D%0A\n-%0A\n     int getEnerg\n@@ -1467,26 +1467,31 @@\n etEnergy\n-() const %7B\n+Max() %7B%0A       \n  return \n@@ -1496,20 +1496,28 @@\n n energy\n-;\n+Max;%0A   \n  %7D%0A\n+%0A\n     int \n@@ -1525,26 +1525,31 @@\n etHungry\n-() const %7B\n+Max() %7B%0A       \n  return \n@@ -1554,20 +1554,28 @@\n n hungry\n-;\n+Max;%0A   \n  %7D%0A\n+%0A\n     int \n@@ -1586,171 +1586,44 @@\n lean\n-() const %7B return clean; %7D%0A    int getDiamonds() const %7B return diamonds; %7D%0A    int getAge() const %7B return age; %7D%0A    int getEnergyMax() const %7B return energyMax;\n+Max() %7B%0A        return cleanMax;%0A   \n  %7D%0A%0A\n@@ -1636,38 +1636,32 @@\n ring to_string()\n- const\n  %7B%0A        ostri\n@@ -1993,22 +1993,16 @@\n tAlive()\n- const\n  %7B%0A     \n@@ -2134,17 +2134,31 @@\n ue;%0A    \n-%7D\n+    %7D%0A    %0A    \n %0A%0Apublic\n@@ -2168,16 +2168,55 @@\n    Game(\n+Pet* pet) : pet(pet) %7B%7D%0A%0A    void init(\n int ener\n@@ -2233,32 +2233,35 @@\n ngry, int clean)\n+ %7B \n %0A        : pet(n\n@@ -2257,143 +2257,342 @@\n     \n-: pet(new Pet(energy, hungry, clean)) %7B%7D%0A%0A    ~Game() %7B%0A        delete pet;%0A    %7D%0A%0A    void play() %7B%0A        if (!testAlive()) return;%0A\n+if (pet != nullptr) %7B%0A            delete pet;%0A        %7D%0A        pet = new Pet(energy, hungry, clean);%0A    %7D%0A%0A%0A    string to_string() %7B%0A        return pet-%3Eto_string();%0A    %7D%0A%0A    void play() %7B%0A        if (!testAlive()) return;%0A        %0A        %0A        pet-%3EsetAge(pet-%3EgetAge() + 1);%0A        pet-%3EsetDiamonds(pet-%3EgetDiamonds() + 1);\n %0A   \n@@ -2736,48 +2736,26 @@\n     \n-pet-%3EaddAge(1);%0A        pet-%3EaddDiamonds\n+%0A        testAlive\n ();%0A\n@@ -2851,32 +2851,72 @@\n tEnergy() - 1);%0A\n+        pet-%3EsetAge(pet-%3EgetAge() + 1);%0A\n         pet-%3Eset\n@@ -2985,32 +2985,33 @@\n ean() - 2);%0A\n+%0A\n         \n pet-%3EaddAge(\n@@ -3002,21 +3002,18 @@\n     \n-pet-%3EaddAg\n+testAliv\n e(\n-1\n );%0A \n@@ -3292,24 +3292,75 @@\n ergyMax());%0A\n+        pet-%3EsetAge(pet-%3EgetAge() + energyNeeded);%0A\n         pet-\n@@ -3389,32 +3389,33 @@\n gry() - 1);%0A\n+%0A\n         \n pet-%3EaddAge(\n@@ -3406,32 +3406,18 @@\n     \n-pet-%3EaddAge(energyNeeded\n+testAlive(\n );%0A \n@@ -3468,32 +3468,80 @@\n live()) return;%0A\n+        %0A        pet-%3EsetAge(pet-%3EgetAge() + 2);\n %0A        pet-%3Ese\n@@ -3563,32 +3563,75 @@\n tEnergy() - 3);%0A\n+        pet-%3EsetClean(pet-%3EgetCleanMax());%0A\n         pet-%3Eset\n@@ -3672,91 +3672,35 @@\n     \n-pet-%3EaddAge(2);\n %0A    \n-%7D%0A%0A\n     \n-string to_string() const %7B%0A        return pet-%3Eto_string\n+%0A        testAlive\n ();%0A\n@@ -3819,26 +3819,24 @@\n ean)\n- %7B\n %0A\n+ \n        \n+:\n  game\n- = \n+(\n new \n@@ -3840,16 +3840,24 @@\n ew Game(\n+new Pet(\n energy, \n@@ -3874,59 +3874,12 @@\n ean)\n-;%0A    %7D%0A%0A    ~Adapter() %7B%0A        delete game;%0A    \n+)) %7B\n %7D%0A%0A \n@@ -4165,19 +4165,19 @@\n Adapter \n-pet\n+stu\n (0, 0, 0\n@@ -4378,32 +4378,37 @@\n                 \n+     \n %7D%0A        else i\n@@ -4433,19 +4433,19 @@\n t%22)   %7B \n-pet\n+stu\n  = Adapt\n@@ -4520,19 +4520,19 @@\n w%22)   %7B \n-pet\n+stu\n .show();\n@@ -4552,32 +4552,37 @@\n                 \n+  \n+   \n %7D%0A        else i\n@@ -4611,19 +4611,19 @@\n   %7B \n-pet\n+stu\n .play();\n     \n@@ -4618,16 +4618,21 @@\n .play();\n+     \n         \n@@ -4698,18 +4698,23 @@\n   %7B \n-pet\n+stu\n .eat();\n+     \n     \n@@ -4781,19 +4781,19 @@\n ep%22)  %7B \n-pet\n+stu\n .sleep()\n@@ -4793,16 +4793,21 @@\n sleep();\n+     \n         \n@@ -4868,19 +4868,19 @@\n wer%22) %7B \n-pet\n+stu\n .shower(\n@@ -4881,16 +4881,21 @@\n hower();\n+     \n         \n@@ -4991,16 +4991,21 @@\n alido%22);\n+     \n     %7D%0A  \n@@ -5009,9 +5009,8 @@\n %0A    %7D%0A%7D\n-%0A\n"
        },
        {
            "label": "2024-11-30_03-01-46",
            "content": "@@ -14,96 +14,3532 @@\n hpp%22\n- // https://raw.githubusercontent.com/senapk/cppaux/master/fn.hpp%0A#include %22Student.hpp%22\n+%0A#include %3Ciostream%3E%0A#include %3Cstring%3E%0A#include %3Csstream%3E%0A#include %3Calgorithm%3E%0A%0Ausing namespace std;%0A%0Aclass Pet %7B%0Aprivate:%0A    int energyMax, hungryMax, cleanMax;%0A    int energy, hungry, clean;%0A    int diamonds = 0, age = 0;%0A    bool alive = true;%0A%0A    void checkAlive() %7B%0A        if (energy == 0 %7C%7C hungry == 0 %7C%7C clean == 0)%0A            alive = false;%0A    %7D%0A%0Apublic:%0A    Pet(int energy, int hungry, int clean)%0A        : energyMax(energy), hungryMax(hungry), cleanMax(clean),%0A          energy(energy), hungry(hungry), clean(clean) %7B%7D%0A%0A    bool isAlive() const %7B%0A        return alive;%0A    %7D%0A%0A    void setEnergy(int value) %7B%0A        energy = max(0, min(energyMax, value));%0A        checkAlive();%0A    %7D%0A%0A    void setHungry(int value) %7B%0A        hungry = max(0, min(hungryMax, value));%0A        checkAlive();%0A    %7D%0A%0A    void setClean(int value) %7B%0A        clean = max(0, min(cleanMax, value));%0A        checkAlive();%0A    %7D%0A%0A    void addDiamonds() %7B%0A        diamonds++;%0A    %7D%0A%0A    void addAge(int value) %7B%0A        age += value;%0A    %7D%0A%0A    int getEnergy() const %7B return energy; %7D%0A    int getHungry() const %7B return hungry; %7D%0A    int getClean() const %7B return clean; %7D%0A    int getDiamonds() const %7B return diamonds; %7D%0A    int getAge() const %7B return age; %7D%0A    int getEnergyMax() const %7B return energyMax; %7D%0A%0A    string to_string() const %7B%0A        ostringstream oss;%0A        oss %3C%3C %22E:%22 %3C%3C energy %3C%3C %22/%22 %3C%3C energyMax%0A            %3C%3C %22, S:%22 %3C%3C hungry %3C%3C %22/%22 %3C%3C hungryMax%0A            %3C%3C %22, L:%22 %3C%3C clean %3C%3C %22/%22 %3C%3C cleanMax%0A            %3C%3C %22, D:%22 %3C%3C diamonds%0A            %3C%3C %22, I:%22 %3C%3C age;%0A        return oss.str();%0A    %7D%0A%7D;%0A%0Aclass Game %7B%0Aprivate:%0A    Pet* pet = nullptr;%0A%0A    bool testAlive() const %7B%0A        if (!pet-%3EisAlive()) %7B%0A            cout %3C%3C %22fail: pet esta morto%5Cn%22;%0A            return false;%0A        %7D%0A        return true;%0A    %7D%0A%0Apublic:%0A    Game(int energy, int hungry, int clean)%0A        : pet(new Pet(energy, hungry, clean)) %7B%7D%0A%0A    ~Game() %7B%0A        delete pet;%0A    %7D%0A%0A    void play() %7B%0A        if (!testAlive()) return;%0A%0A        pet-%3EsetEnergy(pet-%3EgetEnergy() - 2);%0A        pet-%3EsetHungry(pet-%3EgetHungry() - 1);%0A        pet-%3EsetClean(pet-%3EgetClean() - 3);%0A        pet-%3EaddAge(1);%0A        pet-%3EaddDiamonds();%0A    %7D%0A%0A    void eat() %7B%0A        if (!testAlive()) return;%0A%0A        pet-%3EsetEnergy(pet-%3EgetEnergy() - 1);%0A        pet-%3EsetHungry(pet-%3EgetHungry() + 4);%0A        pet-%3EsetClean(pet-%3EgetClean() - 2);%0A        pet-%3EaddAge(1);%0A    %7D%0A%0A    void sleep() %7B%0A        if (!testAlive()) return;%0A%0A        int energyNeeded = pet-%3EgetEnergyMax() - pet-%3EgetEnergy();%0A        if (energyNeeded %3C 5) %7B%0A            cout %3C%3C %22fail: nao esta com sono%5Cn%22;%0A            return;%0A        %7D%0A%0A        pet-%3EsetEnergy(pet-%3EgetEnergyMax());%0A        pet-%3EsetHungry(pet-%3EgetHungry() - 1);%0A        pet-%3EaddAge(energyNeeded);%0A    %7D%0A%0A    void shower() %7B%0A        if (!testAlive()) return;%0A%0A        pet-%3EsetEnergy(pet-%3EgetEnergy() - 3);%0A        pet-%3EsetHungry(pet-%3EgetHungry() - 1);%0A        pet-%3EaddAge(2);%0A    %7D%0A%0A    string to_string() const %7B%0A        return pet-%3Eto_string();%0A    %7D%0A%7D;%0A%0Aclass Adapter %7B%0Aprivate:%0A    Game* game = nullptr;%0A%0Apublic:%0A    Adapter(int energy, int hungry, int clean) %7B%0A        game = new Game(energy, hungry, clean);%0A    %7D%0A%0A    ~Adapter() %7B%0A        delete game;%0A    %7D%0A%0A    void show() %7B%0A        cout %3C%3C game-%3Eto_string() %3C%3C endl;%0A    %7D%0A%0A    void play() %7B%0A        game-%3Eplay();%0A    %7D%0A%0A    void shower() %7B%0A        game-%3Eshower();%0A    %7D%0A%0A    void eat() %7B%0A        game-%3Eeat();%0A    %7D%0A%0A    void sleep() %7B%0A        game-%3Esleep();%0A    %7D%0A%7D;\n %0A%0Ain\n@@ -3561,19 +3561,19 @@\n Adapter \n-stu\n+pet\n (0, 0, 0\n@@ -3774,37 +3774,32 @@\n                 \n-    \n- \n %7D%0A        else i\n@@ -3824,19 +3824,19 @@\n t%22)   %7B \n-stu\n+pet\n  = Adapt\n@@ -3915,19 +3915,19 @@\n   %7B \n-stu\n+pet\n .show();\n     \n@@ -3922,21 +3922,16 @@\n .show();\n-     \n         \n@@ -3997,19 +3997,19 @@\n   %7B \n-stu\n+pet\n .play();\n     \n@@ -4004,21 +4004,16 @@\n .play();\n-     \n         \n@@ -4075,19 +4075,19 @@\n %22)    %7B \n-stu\n+pet\n .eat(); \n@@ -4107,37 +4107,32 @@\n                 \n- \n-    \n %7D%0A        else i\n@@ -4157,19 +4157,19 @@\n ep%22)  %7B \n-stu\n+pet\n .sleep()\n@@ -4169,21 +4169,16 @@\n sleep();\n-     \n         \n@@ -4243,11 +4243,11 @@\n ) %7B \n-stu\n+pet\n .sho\n@@ -4252,21 +4252,16 @@\n hower();\n-     \n         \n@@ -4357,21 +4357,16 @@\n alido%22);\n-     \n     %7D%0A  \n@@ -4362,16 +4362,17 @@\n %22);    %7D%0A    %7D%0A%7D\n+%0A\n"
        },
        {
            "label": "2024-11-30_03-25-18",
            "content": "#include \"fn.hpp\" // https://raw.githubusercontent.com/senapk/cppaux/master/fn.hpp\n#include \"Student.hpp\"\n\nint main() {\n    Adapter stu(0, 0, 0);\n    while (true) {\n        auto line = fn::input();\n        auto args = fn::split(line, ' ');\n\n        fn::write(\"$\" + line);\n\n        if      (args[0] == \"end\")    { break;                                       }\n        else if (args[0] == \"init\")   { stu = Adapter(+args[1], +args[2], +args[3]); }\n        else if (args[0] == \"show\")   { stu.show();                                  }\n        else if (args[0] == \"play\")   { stu.play();                                  }\n        else if (args[0] == \"eat\")    { stu.eat();                                   }\n        else if (args[0] == \"sleep\")  { stu.sleep();                                 }\n        else if (args[0] == \"shower\") { stu.shower();                                }\n        else                          { fn::write(\"fail: comando invalido\");         }\n    }\n}"
        }
    ]
}